name: Generate API Documentation with pdoc

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pdoc from PyPI
        run: pip install pdoc

      - name: Check for --force support in pdoc
        id: pdoc-force-check
        run: |
          set +e
          pdoc --help | grep -- --force
          RESULT=$?
          echo "pdoc_force_supported=$RESULT" >> $GITHUB_OUTPUT
          set -e

      - name: Install pdoc from GitHub if --force is not available
        if: steps.pdoc-force-check.outputs.pdoc_force_supported != '0'
        run: pip install git+https://github.com/pdoc3/pdoc.git

      - name: Check pdoc version (final)
        run: pdoc --version

      - name: Generate API docs for all .py scripts (preserve names/dirs)
        run: |
          mkdir -p docs-out
          find . -type f -name "*.py" ! -path "*/.*/*" ! -name ".*" | while read file; do
            relpath="${file#./}"
            outdir="docs-out/$(dirname "$relpath")"
            mkdir -p "$outdir"
            pdoc --force -o "$outdir" "$file"
          done

      - name: Deploy to gh-pages (pdoc directory)
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs-out
          target-folder: pdoc
          commit-message: "Update API docs [skip ci]"
          git-config-name: gogo-gadget
          git-config-email: gogo-gadget@users.noreply.github.com
          token: ${{ env.GITHUB_TOKEN }}